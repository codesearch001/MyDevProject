package com.snofed.publicapp.models.events

/*data class EventDetailsResponse()*/

data class EventDetailsResponse(
    val success: Boolean,
    val message: Any?,
    val data: Event,
    val statusCode: Long,
    val totalItems: Long,
)

data class Event(
    val name: String,
    val nameTranslates: NameTranslates,
    val startDate: String,
    val endDate: String,
    val location: String,
    val caption: Any?,
    val description: String,
    val descriptionTranslates: DescriptionTranslates,
    val coverImagePath: Any?,
    val iconPath: String,
    val sponsors: String,
    val link: Any?,
    val linkName: Any?,
    val ticketPrice: Double,
    val isChargeable: Boolean,
    val maxAttendees: Long,
    val clientId: String,
    val sponsorList: List<Any?>,
    val trails: List<Trail>,
    val id: String,
    val syncAction: Long,
)

data class NameTranslates(
    val en: String,
    val sv: Any?,
    val de: Any?,
    val no: Any?,
)

data class DescriptionTranslates(
    val en: String,
    val sv: Any?,
    val de: Any?,
    val no: Any?,
)

data class Trail(
    val name: String,
    val nameTranslates: NameTranslates2,
    val shortName: Any?,
    val description: String,
    val descriptionTranslates: DescriptionTranslates2,
    val shortMessage: String,
    val length: Long,
    val hasLights: Boolean,
    val timespanLightsOn: String,
    val hasFee: Boolean,
    val fee: Any?,
    val comment: Any?,
    val isClosed: Boolean,
    val statusText: Any?,
    val statusDate: Any?,
    val connectFirstAndLastTrack: Boolean,
    val connectInternal: Boolean,
    val isPublished: Boolean,
    val maxAlt: Double,
    val minAlt: Double,
    val startAlt: Any?,
    val endAlt: Any?,
    val ownTrailMapColor: Any?,
    val iconText: Any?,
    val dirtyTime: Any?,
    val sortOrder: Long,
    val displayInTable: Boolean,
    val duration: Double,
    val trailKmlParts: Any?,
    val lastPreparedDate: String,
    val modes: Any?,
    val trailIconPath: Any?,
    val lastUpdateDate: String,
    val visibility: Long,
    val status: Long,
    val polyLine: Any?,
    val isActiveSkidSparService: Boolean,
    val skidSparDays: List<Any?>,
    val skidSparLastPreparation: String,
    val client: Client,
    val area: Any?,
    val activity: Any?,
    val trailQuality: Any?,
    val difficulty: Any?,
    val images: List<Any?>,
    val trailRatings: Any?,
    val trailParts: List<Any?>,
    val intervals: List<Any?>,
    val averageRating: Double,
    val preparationDelay: Double,
    val willBePreparedIn: String,
    val lastPreparedTrailColor: String,
    val startLatitude: Double,
    val startLongitude: Double,
    val excludeFromPreparation: Boolean,
    val isProTrail: Boolean,
    val id: String,
    val syncAction: Long,
)

data class NameTranslates2(
    val en: String,
    val sv: Any?,
    val de: Any?,
    val no: Any?,
)

data class DescriptionTranslates2(
    val en: String,
    val sv: Any?,
    val de: Any?,
    val no: Any?,
)

data class Client(
    val id: String,
    val publicName: String,
    val representative: String,
    val email: String,
    val phoneNumber: String,
    val additionalPhoneNumber: String,
    val visibility: String,
    val totalTrails: Long,
    val totalTrailsLength: Long,
    val logoPath: String,
    val location: String,
    val country: String,
    val county: String,
    val municipality: String,
    val license: Any?,
    val coordinates: Any?,
    val clientSettings: Any?,
    val intervals: Any?,
    val parentOrganisationId: Any?,
    val parentOrganisation: Any?,
    val subOrganisations: Any?,
)

